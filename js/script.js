"use strict";

console.log('arr' + ' - object');   // получаем тип данных строка
console.log(4 + ' - object');       // сложение строки с числом, получаем тип данных строка
console.log(4 + +'5');        // унарный плюс перед строкой превращает тип данных из строки в числовой, поэтому результатом здесь будет сложение двух чисел = 9

let incr = 10,
    decr = 10;

incr++;           // два плюса называются оператор инкремента они увеличивают значение на единицу. Когда оператор инкремента ставим перед значением, форма записи называется префиксной когда ставим после значения, называется постфиксной
decr--;           // два минуса называются оператором декремента они уменьшают значение на единицу. Когда оператор декремента ставим перед значением, форма записи называется префиксной когда ставим после значения, называется постфиксной

console.log(incr);     // получаем одиннадцать так как у нас инкремент увеличивает значение на единицу
console.log(decr);     // получаем девять так как у нас декремент уменьшает значение на единицу

console.log(incr++);     // если мы используем оператор инкремента постфиксно в консоле то он сначала возвращает значение переменоой, а если используем префиксную то значение переменной увеличивается на единицу
console.log(decr--);     // если мы используем оператор декремента постфиксно в консоле то он сначала возвращает значение переменоой, а если используем префиксную то значение переменной уменьшается на единицу

console.log(5%2);        // мы получаем остаток от деления, тоесть 5 делин на 2 сколько это возможно раз и выводим в консоль остаток от этого деления

console.log(2*4 == 8);  // один знак равенства называется присваиванием, два знака равенства  называется сравнением. В этой операции выведется true так как значения равны
console.log(2*4 == '8'); // мы получим значение true, тут мы сравниваем по значение а не по типу данных. 
console.log(2*4 === '8'); // если мы хотим строго сравнить типы данных что число равно числу то нам нужно использовать строгое равенство, для этого мы указываем три знака равенства. Тут мы получим false так как число не равно строке

&&;  // логический оператор 'И', оно работает когда два либо больше аодопытных являются правдивыми выражениями (то есть и эта правда и это правда)
||; // логический оператор 'ИЛИ', оно работает когда один из вариантов бует правдивым (или это правда, или это правда)

const isChecked = true,
      isClose = false;

// console.log(isChecked && isClose);  // получаем false так как одно из этих выражений не верно. Если два выражения будут правдой true то мы в консоли получаем true так как и это выражение верно и это выражени верно
console.log(isChecked || isClose);     // если одной из эти выражений будет правдой true то мы получим в результате true, то есть или это правда или это правда. Если два выражения будут ложь false то мы получим значение false

!;  // оператор отрицания, он обращает значение в обратное (если была правда он обратит его в ложь, если была ложь он обратит в правду)

console.log(2 + 2 * 8 != 8) // восклицательный знак перед равном указывает что левое выражение не равно правому. В итоге мы получаем true так как эти выражение не верны.
console.log(2 + 2 * 8 != '6')  // получаем false так как 6 равно 6, а у нас стоит восклицательный знак перед равно то есть получается что 6 должно быть не равно 6 а это не правда false
console.log(2 + 2 * 8 !== '6')  // строгое сравнение типов данных, здесь тип данных число не равно типу данных строка, получаем в итоге true правду.